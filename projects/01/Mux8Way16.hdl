// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    /**
    * The only way I was able to solve this was to 
    * write out (with traditional pencil and paper) the 
    * truth table: 3 bits to choose between a-h
    * Then I group A and B together, C and D,
    * E and F, G and H: group1, group2, group3, and group4
    * Then, it's a matter of choosing between each of these groups
    */
    PARTS:
    // A or B
    Mux16(a=a, b=b, sel=sel[0], out=group1);
    // C or D
    Mux16(a=c, b=d, sel=sel[0], out=group2);
    // D or E
    Mux16(a=e, b=f, sel=sel[0], out=group3);
    // G or H
    Mux16(a=g, b=h, sel=sel[0], out=group4);

    Mux16(a=group1, b=group2, sel=sel[1], out=group1orgroup2);
    Mux16(a=group3, b=group4, sel=sel[1], out=group3orgroup4);
    Mux16(a=group1orgroup2, b=group3orgroup4, sel=sel[2], out=out);
}
